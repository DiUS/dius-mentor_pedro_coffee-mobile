// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "space-between",
      "padding": 10,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      style={
        Array [
          Object {
            "fontSize": 24,
            "fontWeight": "bold",
          },
          Object {
            "height": 60,
          },
        ]
      }
      value="test_order"
    />
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginBottom": 8,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 5,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontSize": 24,
              "fontWeight": "bold",
            }
          }
        >
          Drinks:
        </Text>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 4,
          }
        }
      >
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#0C42FD",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              +
            </Text>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      dataSource={
        ListViewDataSource {
          "items": 0,
        }
      }
      enableEmptySections={true}
      renderRow={[Function]}
      renderScrollComponent={[Function]}
      renderSeparator={[Function]}
    >
      <View />
    </RCTScrollView>
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "marginRight": 4,
          }
        }
      >
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#0C42FD",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              &lt;
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 4,
            "marginLeft": 4,
            "marginRight": 4,
          }
        }
      >
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#0C42FD",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#ff6666",
                  },
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 4,
            "marginLeft": 4,
          }
        }
      >
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
              "disabled",
            ]
          }
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#0C42FD",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#79d279",
                  },
                  Object {
                    "color": "#cdcdcd",
                  },
                ]
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
